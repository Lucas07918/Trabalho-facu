{"ast":null,"code":"import { isJest } from \"./PlatformChecker\";\nimport { runOnUI } from \"./threads\";\nvar IS_JEST = isJest();\nvar _worklet_11065790024404_init_data = {\n  code: \"function createMapperRegistry() {\\n  const {\\n    IS_JEST\\n  } = this._closure;\\n  const mappers = new Map();\\n  let sortedMappers = [];\\n  let runRequested = false;\\n  function updateMappersOrder() {\\n    const pre = new Map();\\n    mappers.forEach(function (mapper) {\\n      if (mapper.outputs) {\\n        for (const output of mapper.outputs) {\\n          const preMappers = pre.get(output);\\n          if (preMappers === undefined) {\\n            pre.set(output, [mapper]);\\n          } else {\\n            preMappers.push(mapper);\\n          }\\n        }\\n      }\\n    });\\n    const visited = new Set();\\n    const newOrder = [];\\n    function dfs(mapper) {\\n      visited.add(mapper);\\n      for (const input of mapper.inputs) {\\n        const preMappers = pre.get(input);\\n        if (preMappers) {\\n          for (const preMapper of preMappers) {\\n            if (!visited.has(preMapper)) {\\n              dfs(preMapper);\\n            }\\n          }\\n        }\\n      }\\n      newOrder.push(mapper);\\n    }\\n    mappers.forEach(function (mapper) {\\n      if (!visited.has(mapper)) {\\n        dfs(mapper);\\n      }\\n    });\\n    sortedMappers = newOrder;\\n  }\\n  function mapperRun() {\\n    runRequested = false;\\n    if (mappers.size !== sortedMappers.length) {\\n      updateMappersOrder();\\n    }\\n    for (const mapper of sortedMappers) {\\n      if (mapper.dirty) {\\n        mapper.dirty = false;\\n        mapper.worklet();\\n      }\\n    }\\n  }\\n  function maybeRequestUpdates() {\\n    if (IS_JEST) {\\n      mapperRun();\\n    } else if (!runRequested) {\\n      setImmediate(mapperRun);\\n      runRequested = true;\\n    }\\n  }\\n  function extractInputs(inputs, resultArray) {\\n    if (Array.isArray(inputs)) {\\n      for (const input of inputs) {\\n        input && extractInputs(input, resultArray);\\n      }\\n    } else if (inputs.addListener) {\\n      resultArray.push(inputs);\\n    } else if (typeof inputs === 'object') {\\n      for (const element of Object.values(inputs)) {\\n        element && extractInputs(element, resultArray);\\n      }\\n    }\\n    return resultArray;\\n  }\\n  return {\\n    start: function (mapperID, worklet, inputs, outputs) {\\n      const mapper = {\\n        id: mapperID,\\n        dirty: true,\\n        worklet: worklet,\\n        inputs: extractInputs(inputs, []),\\n        outputs: outputs\\n      };\\n      mappers.set(mapper.id, mapper);\\n      sortedMappers = [];\\n      for (const sv of mapper.inputs) {\\n        sv.addListener(mapper.id, function () {\\n          mapper.dirty = true;\\n          maybeRequestUpdates();\\n        });\\n      }\\n      maybeRequestUpdates();\\n    },\\n    stop: function (mapperID) {\\n      const mapper = mappers.get(mapperID);\\n      if (mapper) {\\n        mappers.delete(mapper.id);\\n        sortedMappers = [];\\n        for (const sv of mapper.inputs) {\\n          sv.removeListener(mapper.id);\\n        }\\n      }\\n    }\\n  };\\n}\",\n  location: \"C:\\\\Users\\\\luc4s\\\\Documents\\\\Meus Projetos\\\\gerenciador-de-condominio\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\reanimated2\\\\mappers.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"createMapperRegistry\\\",\\\"IS_JEST\\\",\\\"_closure\\\",\\\"mappers\\\",\\\"Map\\\",\\\"sortedMappers\\\",\\\"runRequested\\\",\\\"updateMappersOrder\\\",\\\"pre\\\",\\\"forEach\\\",\\\"mapper\\\",\\\"outputs\\\",\\\"output\\\",\\\"preMappers\\\",\\\"get\\\",\\\"undefined\\\",\\\"set\\\",\\\"push\\\",\\\"visited\\\",\\\"Set\\\",\\\"newOrder\\\",\\\"dfs\\\",\\\"add\\\",\\\"input\\\",\\\"inputs\\\",\\\"preMapper\\\",\\\"has\\\",\\\"mapperRun\\\",\\\"size\\\",\\\"length\\\",\\\"dirty\\\",\\\"worklet\\\",\\\"maybeRequestUpdates\\\",\\\"setImmediate\\\",\\\"extractInputs\\\",\\\"resultArray\\\",\\\"Array\\\",\\\"isArray\\\",\\\"addListener\\\",\\\"element\\\",\\\"Object\\\",\\\"values\\\",\\\"start\\\",\\\"mapperID\\\",\\\"id\\\",\\\"sv\\\",\\\"stop\\\",\\\"delete\\\",\\\"removeListener\\\"],\\\"sources\\\":[\\\"C:/Users/luc4s/Documents/Meus Projetos/gerenciador-de-condominio/node_modules/react-native-reanimated/lib/module/reanimated2/mappers.js\\\"],\\\"mappings\\\":\\\"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\\\"}\"\n};\nexport var createMapperRegistry = function () {\n  var _e = [new Error(), -2, -20];\n  var _f = function _f() {\n    var mappers = new Map();\n    var sortedMappers = [];\n    var runRequested = false;\n    function updateMappersOrder() {\n      var pre = new Map();\n      mappers.forEach(function (mapper) {\n        if (mapper.outputs) {\n          for (var output of mapper.outputs) {\n            var preMappers = pre.get(output);\n            if (preMappers === undefined) {\n              pre.set(output, [mapper]);\n            } else {\n              preMappers.push(mapper);\n            }\n          }\n        }\n      });\n      var visited = new Set();\n      var newOrder = [];\n      function dfs(mapper) {\n        visited.add(mapper);\n        for (var input of mapper.inputs) {\n          var preMappers = pre.get(input);\n          if (preMappers) {\n            for (var preMapper of preMappers) {\n              if (!visited.has(preMapper)) {\n                dfs(preMapper);\n              }\n            }\n          }\n        }\n        newOrder.push(mapper);\n      }\n      mappers.forEach(function (mapper) {\n        if (!visited.has(mapper)) {\n          dfs(mapper);\n        }\n      });\n      sortedMappers = newOrder;\n    }\n    function mapperRun() {\n      runRequested = false;\n      if (mappers.size !== sortedMappers.length) {\n        updateMappersOrder();\n      }\n      for (var mapper of sortedMappers) {\n        if (mapper.dirty) {\n          mapper.dirty = false;\n          mapper.worklet();\n        }\n      }\n    }\n    function maybeRequestUpdates() {\n      if (IS_JEST) {\n        mapperRun();\n      } else if (!runRequested) {\n        setImmediate(mapperRun);\n        runRequested = true;\n      }\n    }\n    function extractInputs(inputs, resultArray) {\n      if (Array.isArray(inputs)) {\n        for (var input of inputs) {\n          input && extractInputs(input, resultArray);\n        }\n      } else if (inputs.addListener) {\n        resultArray.push(inputs);\n      } else if (typeof inputs === 'object') {\n        for (var element of Object.values(inputs)) {\n          element && extractInputs(element, resultArray);\n        }\n      }\n      return resultArray;\n    }\n    return {\n      start: function start(mapperID, worklet, inputs, outputs) {\n        var mapper = {\n          id: mapperID,\n          dirty: true,\n          worklet: worklet,\n          inputs: extractInputs(inputs, []),\n          outputs: outputs\n        };\n        mappers.set(mapper.id, mapper);\n        sortedMappers = [];\n        for (var sv of mapper.inputs) {\n          sv.addListener(mapper.id, function () {\n            mapper.dirty = true;\n            maybeRequestUpdates();\n          });\n        }\n        maybeRequestUpdates();\n      },\n      stop: function stop(mapperID) {\n        var mapper = mappers.get(mapperID);\n        if (mapper) {\n          mappers.delete(mapper.id);\n          sortedMappers = [];\n          for (var sv of mapper.inputs) {\n            sv.removeListener(mapper.id);\n          }\n        }\n      }\n    };\n  };\n  _f._closure = {\n    IS_JEST: IS_JEST\n  };\n  _f.__initData = _worklet_11065790024404_init_data;\n  _f.__workletHash = 11065790024404;\n  _f.__stackDetails = _e;\n  return _f;\n}();\nvar MAPPER_ID = 9999;\nvar _worklet_10884867408878_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    createMapperRegistry,\\n    mapperID,\\n    worklet,\\n    inputs,\\n    outputs\\n  } = this._closure;\\n  let mapperRegistry = global.__mapperRegistry;\\n  if (mapperRegistry === undefined) {\\n    mapperRegistry = global.__mapperRegistry = createMapperRegistry();\\n  }\\n  mapperRegistry.start(mapperID, worklet, inputs, outputs);\\n}\",\n  location: \"C:\\\\Users\\\\luc4s\\\\Documents\\\\Meus Projetos\\\\gerenciador-de-condominio\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\reanimated2\\\\mappers.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"createMapperRegistry\\\",\\\"mapperID\\\",\\\"worklet\\\",\\\"inputs\\\",\\\"outputs\\\",\\\"_closure\\\",\\\"mapperRegistry\\\",\\\"global\\\",\\\"__mapperRegistry\\\",\\\"undefined\\\",\\\"start\\\"],\\\"sources\\\":[\\\"C:/Users/luc4s/Documents/Meus Projetos/gerenciador-de-condominio/node_modules/react-native-reanimated/lib/module/reanimated2/mappers.js\\\"],\\\"mappings\\\":\\\"AAiKU,SAAAA,SAAMA,CAAA;EAAA;IAAAC,oBAAA;IAAAC,QAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC;EAAA,SAAAC,QAAA;EAGZ,IAAIC,cAAc,GAAGC,MAAM,CAACC,gBAAgB;EAE5C,IAAIF,cAAc,KAAKG,SAAS,EAAE;IAChCH,cAAc,GAAGC,MAAM,CAACC,gBAAgB,GAAGR,oBAAoB,EAAE;EACnE;EAEAM,cAAc,CAACI,KAAK,CAACT,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAEC,OAAO,CAAC;AAC1D\\\"}\"\n};\nexport function startMapper(worklet) {\n  var inputs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var outputs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var mapperID = MAPPER_ID += 1;\n  runOnUI(function () {\n    var _e = [new Error(), -6, -20];\n    var _f = function _f() {\n      var mapperRegistry = global.__mapperRegistry;\n      if (mapperRegistry === undefined) {\n        mapperRegistry = global.__mapperRegistry = createMapperRegistry();\n      }\n      mapperRegistry.start(mapperID, worklet, inputs, outputs);\n    };\n    _f._closure = {\n      createMapperRegistry: createMapperRegistry,\n      mapperID: mapperID,\n      worklet: worklet,\n      inputs: inputs,\n      outputs: outputs\n    };\n    _f.__initData = _worklet_10884867408878_init_data;\n    _f.__workletHash = 10884867408878;\n    _f.__stackDetails = _e;\n    return _f;\n  }())();\n  return mapperID;\n}\nvar _worklet_13611698491048_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    mapperID\\n  } = this._closure;\\n  const mapperRegistry = global.__mapperRegistry;\\n  mapperRegistry === null || mapperRegistry === void 0 ? void 0 : mapperRegistry.stop(mapperID);\\n}\",\n  location: \"C:\\\\Users\\\\luc4s\\\\Documents\\\\Meus Projetos\\\\gerenciador-de-condominio\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\reanimated2\\\\mappers.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"mapperID\\\",\\\"_closure\\\",\\\"mapperRegistry\\\",\\\"global\\\",\\\"__mapperRegistry\\\",\\\"stop\\\"],\\\"sources\\\":[\\\"C:/Users/luc4s/Documents/Meus Projetos/gerenciador-de-condominio/node_modules/react-native-reanimated/lib/module/reanimated2/mappers.js\\\"],\\\"mappings\\\":\\\"AA+KU,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGZ,MAAMC,cAAc,GAAGC,MAAM,CAACC,gBAAgB;EAC9CF,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACG,IAAI,CAACL,QAAQ,CAAC;AAC/F\\\"}\"\n};\nexport function stopMapper(mapperID) {\n  runOnUI(function () {\n    var _e = [new Error(), -2, -20];\n    var _f = function _f() {\n      var mapperRegistry = global.__mapperRegistry;\n      mapperRegistry === null || mapperRegistry === void 0 ? void 0 : mapperRegistry.stop(mapperID);\n    };\n    _f._closure = {\n      mapperID: mapperID\n    };\n    _f.__initData = _worklet_13611698491048_init_data;\n    _f.__workletHash = 13611698491048;\n    _f.__stackDetails = _e;\n    return _f;\n  }())();\n}","map":{"version":3,"names":["isJest","runOnUI","IS_JEST","_worklet_11065790024404_init_data","code","location","sourceMap","createMapperRegistry","_e","Error","_f","mappers","Map","sortedMappers","runRequested","updateMappersOrder","pre","forEach","mapper","outputs","output","preMappers","get","undefined","set","push","visited","Set","newOrder","dfs","add","input","inputs","preMapper","has","mapperRun","size","length","dirty","worklet","maybeRequestUpdates","setImmediate","extractInputs","resultArray","Array","isArray","addListener","element","Object","values","start","mapperID","id","sv","stop","delete","removeListener","_closure","__initData","__workletHash","__stackDetails","MAPPER_ID","_worklet_10884867408878_init_data","startMapper","arguments","mapperRegistry","global","__mapperRegistry","_worklet_13611698491048_init_data","stopMapper"],"sources":["C:\\Users\\luc4s\\Documents\\Meus Projetos\\gerenciador-de-condominio\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\mappers.ts"],"sourcesContent":["import { SharedValue } from './commonTypes';\nimport { isJest } from './PlatformChecker';\nimport { runOnUI } from './threads';\n\nconst IS_JEST = isJest();\n\nexport type Mapper = {\n  id: number;\n  dirty: boolean;\n  worklet: () => void;\n  inputs: SharedValue<any>[];\n  outputs?: SharedValue<any>[];\n};\n\nexport function createMapperRegistry() {\n  'worklet';\n  const mappers = new Map();\n  let sortedMappers: Mapper[] = [];\n\n  let runRequested = false;\n\n  function updateMappersOrder() {\n    // sort mappers topologically\n    // the algorithm here takes adventage of a fact that the topological order\n    // of a transposed graph is a reverse topological order of the original graph\n    // The graph in our case consists of mappers and an edge between two mappers\n    // A and B exists if there is a shared value that's on A's output lists and on\n    // B's input list.\n    //\n    // We don't need however to calculate that graph as it is easier to work with\n    // the transposed version of it that can be calculated ad-hoc. For the transposed\n    // version to be traversed we use \"pre\" map that maps share value to mappers that\n    // output that shared value. Then we can infer all the outgoing edges for a given\n    // mapper simply by scanning it's input list and checking if any of the shared values\n    // from that list exists in the \"pre\" map. If they do, then we have an edge between\n    // that mapper and the mappers from the \"pre\" list for the given shared value.\n    //\n    // For topological sorting we use a dfs-based approach that requires the graph to\n    // be traversed in dfs order and each node after being processed lands at the\n    // beginning of the topological order list. Since we traverse a transposed graph,\n    // instead of reversing that order we can use a normal array and push processed\n    // mappers to the end. There is no need to reverse that array after we are done.\n    const pre = new Map(); // map from sv -> mapper that outputs that sv\n    mappers.forEach((mapper) => {\n      if (mapper.outputs) {\n        for (const output of mapper.outputs) {\n          const preMappers = pre.get(output);\n          if (preMappers === undefined) {\n            pre.set(output, [mapper]);\n          } else {\n            preMappers.push(mapper);\n          }\n        }\n      }\n    });\n    const visited = new Set();\n    const newOrder: Mapper[] = [];\n    function dfs(mapper: Mapper) {\n      visited.add(mapper);\n      for (const input of mapper.inputs) {\n        const preMappers = pre.get(input);\n        if (preMappers) {\n          for (const preMapper of preMappers) {\n            if (!visited.has(preMapper)) {\n              dfs(preMapper);\n            }\n          }\n        }\n      }\n      newOrder.push(mapper);\n    }\n    mappers.forEach((mapper) => {\n      if (!visited.has(mapper)) {\n        dfs(mapper);\n      }\n    });\n    sortedMappers = newOrder;\n  }\n\n  function mapperRun() {\n    runRequested = false;\n    if (mappers.size !== sortedMappers.length) {\n      updateMappersOrder();\n    }\n    for (const mapper of sortedMappers) {\n      if (mapper.dirty) {\n        mapper.dirty = false;\n        mapper.worklet();\n      }\n    }\n  }\n\n  function maybeRequestUpdates() {\n    if (IS_JEST) {\n      // On Jest environment we avoid using setImmediate as that'd require test\n      // to advance the clock manually. This on other hand would require tests\n      // to know how many times mappers need to run. As we don't want tests to\n      // make any assumptions on that number it is easier to execute mappers\n      // immediately for testing purposes and only expect test to advance timers\n      // if they want to make any assertions on the effects of animations being run.\n      mapperRun();\n    } else if (!runRequested) {\n      setImmediate(mapperRun);\n      runRequested = true;\n    }\n  }\n\n  function extractInputs(\n    inputs: any,\n    resultArray: SharedValue<any>[]\n  ): SharedValue<any>[] {\n    if (Array.isArray(inputs)) {\n      for (const input of inputs) {\n        input && extractInputs(input, resultArray);\n      }\n    } else if (inputs.addListener) {\n      resultArray.push(inputs);\n    } else if (typeof inputs === 'object') {\n      for (const element of Object.values(inputs)) {\n        element && extractInputs(element, resultArray);\n      }\n    }\n    return resultArray;\n  }\n\n  return {\n    start: (\n      mapperID: number,\n      worklet: () => void,\n      inputs: SharedValue<any>[],\n      outputs?: SharedValue<any>[]\n    ) => {\n      const mapper = {\n        id: mapperID,\n        dirty: true,\n        worklet,\n        inputs: extractInputs(inputs, []),\n        outputs,\n      };\n      mappers.set(mapper.id, mapper);\n      sortedMappers = [];\n      for (const sv of mapper.inputs) {\n        sv.addListener(mapper.id, () => {\n          mapper.dirty = true;\n          maybeRequestUpdates();\n        });\n      }\n      maybeRequestUpdates();\n    },\n    stop: (mapperID: number) => {\n      const mapper = mappers.get(mapperID);\n      if (mapper) {\n        mappers.delete(mapper.id);\n        sortedMappers = [];\n        for (const sv of mapper.inputs) {\n          sv.removeListener(mapper.id);\n        }\n      }\n    },\n  };\n}\n\nlet MAPPER_ID = 9999;\n\nexport function startMapper(\n  worklet: () => void,\n  inputs: any[] = [],\n  outputs: any[] = []\n): number {\n  const mapperID = (MAPPER_ID += 1);\n\n  runOnUI(() => {\n    'worklet';\n    let mapperRegistry = global.__mapperRegistry;\n    if (mapperRegistry === undefined) {\n      mapperRegistry = global.__mapperRegistry = createMapperRegistry();\n    }\n    mapperRegistry.start(mapperID, worklet, inputs, outputs);\n  })();\n\n  return mapperID;\n}\n\nexport function stopMapper(mapperID: number): void {\n  runOnUI(() => {\n    'worklet';\n    const mapperRegistry = global.__mapperRegistry;\n    mapperRegistry?.stop(mapperID);\n  })();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}