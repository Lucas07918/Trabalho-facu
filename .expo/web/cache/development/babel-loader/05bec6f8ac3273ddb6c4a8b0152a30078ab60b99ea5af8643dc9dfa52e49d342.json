{"ast":null,"code":"import { useRef } from 'react';\nimport { useSharedValue } from \"./useSharedValue\";\nimport { getTag } from \"../NativeMethods\";\nimport { getShadowNodeWrapperFromHostInstance } from \"../fabricUtils\";\nimport { makeShareableCloneRecursive, registerShareableMapping } from \"../shareables\";\nfunction getShareableShadowNodeFromComponent(component) {\n  return getShadowNodeWrapperFromHostInstance(component);\n}\nvar getTagValueFunction = global._IS_FABRIC ? getShareableShadowNodeFromComponent : getTag;\nvar _worklet_13022177922424_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    tag\\n  } = this._closure;\\n  return function () {\\n    return tag.value;\\n  };\\n}\",\n  location: \"C:\\\\Users\\\\luc4s\\\\Documents\\\\Meus Projetos\\\\gerenciador-de-condominio\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\reanimated2\\\\hook\\\\useAnimatedRef.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"tag\\\",\\\"_closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"C:/Users/luc4s/Documents/Meus Projetos/gerenciador-de-condominio/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedRef.js\\\"],\\\"mappings\\\":\\\"AA4Bc,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGZ,OAAO;IAAA,OAAMD,GAAG,CAACE,KAAK;EAAA;AACxB\\\"}\"\n};\nexport function useAnimatedRef() {\n  var tag = useSharedValue(-1);\n  var ref = useRef();\n  if (!ref.current) {\n    var fun = function fun(component) {\n      if (component) {\n        tag.value = getTagValueFunction(component);\n        fun.current = component;\n      }\n      return tag.value;\n    };\n    fun.current = null;\n    var remoteRef = makeShareableCloneRecursive({\n      __init: function () {\n        var _e = [new Error(), -2, -20];\n        var _f = function _f() {\n          return function () {\n            return tag.value;\n          };\n        };\n        _f._closure = {\n          tag: tag\n        };\n        _f.__initData = _worklet_13022177922424_init_data;\n        _f.__workletHash = 13022177922424;\n        _f.__stackDetails = _e;\n        return _f;\n      }()\n    });\n    registerShareableMapping(fun, remoteRef);\n    ref.current = fun;\n  }\n  return ref.current;\n}","map":{"version":3,"names":["useRef","useSharedValue","getTag","getShadowNodeWrapperFromHostInstance","makeShareableCloneRecursive","registerShareableMapping","getShareableShadowNodeFromComponent","component","getTagValueFunction","global","_IS_FABRIC","_worklet_13022177922424_init_data","code","location","sourceMap","useAnimatedRef","tag","ref","current","fun","value","remoteRef","__init","_e","Error","_f","_closure","__initData","__workletHash","__stackDetails"],"sources":["C:\\Users\\luc4s\\Documents\\Meus Projetos\\gerenciador-de-condominio\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\useAnimatedRef.ts"],"sourcesContent":["import { Component, useRef } from 'react';\nimport { useSharedValue } from './useSharedValue';\nimport { RefObjectFunction } from './commonTypes';\nimport { ShadowNodeWrapper } from '../commonTypes';\nimport { getTag } from '../NativeMethods';\nimport { getShadowNodeWrapperFromHostInstance } from '../fabricUtils';\nimport {\n  makeShareableCloneRecursive,\n  registerShareableMapping,\n} from '../shareables';\n\nfunction getShareableShadowNodeFromComponent(\n  component: Component\n): ShadowNodeWrapper {\n  return getShadowNodeWrapperFromHostInstance(component);\n}\n\nconst getTagValueFunction = global._IS_FABRIC\n  ? getShareableShadowNodeFromComponent\n  : getTag;\n\nexport function useAnimatedRef<T extends Component>(): RefObjectFunction<T> {\n  const tag = useSharedValue<number | ShadowNodeWrapper | null>(-1);\n  const ref = useRef<RefObjectFunction<T>>();\n\n  if (!ref.current) {\n    const fun: RefObjectFunction<T> = <RefObjectFunction<T>>((component) => {\n      // enters when ref is set by attaching to a component\n      if (component) {\n        tag.value = getTagValueFunction(component);\n        fun.current = component;\n      }\n      return tag.value;\n    });\n\n    fun.current = null;\n\n    const remoteRef = makeShareableCloneRecursive({\n      __init: () => {\n        'worklet';\n        return () => tag.value;\n      },\n    });\n    registerShareableMapping(fun, remoteRef);\n\n    ref.current = fun;\n  }\n\n  return ref.current;\n}\n"],"mappings":"AAAA,SAAoBA,MAApB,QAAkC,OAAlC;AACA,SAASC,cAAT;AAGA,SAASC,MAAT;AACA,SAASC,oCAAT;AACA,SACEC,2BADF,EAEEC,wBAFF;AAKA,SAASC,mCAATA,CACEC,SADF,EAEqB;EACnB,OAAOJ,oCAAoC,CAACI,SAAD,CAA3C;AACD;AAED,IAAMC,mBAAmB,GAAGC,MAAM,CAACC,UAAP,GACxBJ,mCADwB,GAExBJ,MAFJ;AAAA,IAAAS,iCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;AAAA;AAIA,OAAO,SAASC,cAATA,CAAA,EAAqE;EAC1E,IAAMC,GAAG,GAAGf,cAAc,CAAoC,CAAC,CAArC,CAA1B;EACA,IAAMgB,GAAG,GAAGjB,MAAM,EAAlB;EAEA,IAAI,CAACiB,GAAG,CAACC,OAAT,EAAkB;IAChB,IAAMC,GAAyB,GAA2B,SAApDA,GAAyBA,CAA2BZ,SAAD,EAAe;MAEtE,IAAIA,SAAJ,EAAe;QACbS,GAAG,CAACI,KAAJ,GAAYZ,mBAAmB,CAACD,SAAD,CAA/B;QACAY,GAAG,CAACD,OAAJ,GAAcX,SAAd;MACD;MACD,OAAOS,GAAG,CAACI,KAAX;IACD,CAPD;IASAD,GAAG,CAACD,OAAJ,GAAc,IAAd;IAEA,IAAMG,SAAS,GAAGjB,2BAA2B,CAAC;MAC5CkB,MAAM;QAAA,IAAAC,EAAA,QAAAC,KAAA;QAAA,IAAAC,EAAA,YAAAA,GAAA,EAAQ;UAEZ,OAAO;YAAA,OAAMT,GAAG,CAACI,KAAjB;UAAA;QACD;QAAAK,EAAA,CAAAC,QAAA;UAAAV,GAAA,EAxCEA;QAAA;QAAAS,EAAA,CAAAE,UAAA,GAAAhB,iCAAA;QAAAc,EAAA,CAAAG,aAAA;QAAAH,EAAA,CAAAI,cAAA,GAAAN,EAAA;QAAA,OAAAE,EAAA;MAAA;IAoCyC,CAAD,CAA7C;IAMApB,wBAAwB,CAACc,GAAD,EAAME,SAAN,CAAxB;IAEAJ,GAAG,CAACC,OAAJ,GAAcC,GAAd;EACD;EAED,OAAOF,GAAG,CAACC,OAAX;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}